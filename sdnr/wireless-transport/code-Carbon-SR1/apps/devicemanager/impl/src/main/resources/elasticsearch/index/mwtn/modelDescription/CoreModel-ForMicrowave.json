{
	"schema-information": {
		"ForwardingDomain": {
			"id": "ForwardingDomain",
			"uml-id": "_oGql-FLNEeO75dO39GbF8Q",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"The ForwardingDomain (FD) object class models the topological component which represents the opportunity to enable forwarding (of specific transport characteristic information at one or more protocol layers) between points represented by the LTP in the model. The FD object provides the context for instructing the formation, adjustment and removal of FCs and hence offers the potential to enable forwarding. The LTPs available are those defined at the boundary of the FD. At a lowere level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs) and the FD representing the switch matrix can be further partitioned."
			]
		},
		"layerProtocolNameList": {
			"id": "layerProtocolNameList",
			"uml-id": "_oGqmAlLNEeO75dO39GbF8Q",
			"uml-type": "ownedAttribute",
			"type": "_P-Hp8MD4EeSoNOrYOfaryg",
			"order-number": 1,
			"is-read-only": false,
			"description": [
				"One or more protocol layers at which the FD represents the opportunity to enable forwarding between LTP that bound it."
			]
		},
		"_lowerLevelFdRefList": {
			"id": "_lowerLevelFdRefList",
			"uml-id": "_oGqmBVLNEeO75dO39GbF8Q",
			"uml-type": "ownedAttribute",
			"type": "_oGql-FLNEeO75dO39GbF8Q",
			"order-number": 2,
			"is-read-only": false,
			"description": [
				"The FD object class supports a recursive aggregation relationship (HigherLevelFdEncompassesLowerLevelFds) such that the internal construction of an FD can be exposed as multiple lower level FDs and associated Links (partitioning). The aggregated FDs and Links form an interconnected topology that provides and describes the capability of the aggregating FD. Note that the model actually represents aggregation of lower level FDs into higher level FDs as views rather than FD partition, and supports multiple views. Aggregation allow reallocation of capacity from lower level FDs to different higher level FDs as if the network is reorganized (as the association is aggregation not composition)."
			]
		},
		"_fcRefList": {
			"id": "_fcRefList",
			"uml-id": "_oGql_1LNEeO75dO39GbF8Q",
			"uml-type": "ownedAttribute",
			"type": "_oGqmC1LNEeO75dO39GbF8Q",
			"order-number": 3,
			"is-read-only": false,
			"description": [
				"An FD contains one or more FCs. A contained FC connects LTPs that bound the FD."
			]
		},
		"ForwardingConstruct": {
			"id": "ForwardingConstruct",
			"uml-id": "_oGqmC1LNEeO75dO39GbF8Q",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"The ForwardingConstruct (FC) object class models enabled potential for forwarding between two or more LTPs at a particular specific layerProtocol. Like the LTP the FC supports any transport protocol including all circuit and packet forms. It is used to effect forwarding of transport characteristic (layer protocol) information. An FC can be in only one FD. The ForwardingConstruct is a Forwarding entity. At a low level of the recursion, a FC represents a cross-connection within an NE. It may also represent a fragment of a cross-connection under certain circumstances. The FC object can be used to represent many different structures including point-to-point (P2P), point-to-multipoint (P2MP), rooted-multipoint (RMP) and multipoint-to-multipoint (MP2MP) bridge and selector structure for linear, ring or mesh protection schemes."
			]
		},
		"_lowerLevelFcRefList": {
			"id": "_lowerLevelFcRefList",
			"uml-id": "_i7UzkFYfEeOVGaP4lO41SQ",
			"uml-type": "ownedAttribute",
			"type": "_oGqmC1LNEeO75dO39GbF8Q",
			"order-number": 2,
			"is-read-only": false,
			"description": [
				"An FC object supports a recursive aggregation relationship such that the internal construction of an FC can be exposed as multiple lower level FC objects (partitioning). Aggregation is used as for the FD to allow changes in hierarchy."
			]
		},
		"_fcPortList": {
			"id": "_fcPortList",
			"uml-id": "_gqUk0FYgEeOVGaP4lO41SQ",
			"uml-type": "ownedAttribute",
			"type": "_b_lUAFYgEeOVGaP4lO41SQ",
			"order-number": 3,
			"is-read-only": false,
			"description": [
				"The association of the FC to LTPs is made via FcPorts (essentially the ports of the FC)."
			]
		},
		"_fcSwitchList": {
			"id": "_fcSwitchList",
			"uml-id": "_d_droFYhEeOVGaP4lO41SQ",
			"uml-type": "ownedAttribute",
			"type": "_a97NQFYhEeOVGaP4lO41SQ",
			"order-number": 4,
			"is-read-only": false,
			"description": [
				"If an FC exposes protection (having two FcPorts that provide alternative identical inputs/outputs), the FC will have one or more associated FcSwitch objects. The arrangement of switches for a particular instance is described by a referenced FcSpec"
			]
		},
		"forwardingDirection": {
			"id": "forwardingDirection",
			"uml-id": "_9_yMUEDAEeWQeOKbNUpP9A",
			"uml-type": "ownedAttribute",
			"type": "_dV67AEC8EeWxhL2B6Peg6A",
			"order-number": 5,
			"is-read-only": false,
			"description": [
				"The directionality of the ForwardingConstruct. Is applicable to simple ForwardingConstructs where all FcPorts are BIDIRECTIONAL (the ForwardingConstruct will be BIDIRECTIONAL) or UNIDIRECTIONAL (the ForwardingConstruct will be UNIDIRECTIONAL). Is not present in more complex cases."
			]
		},
		"NetworkElement": {
			"id": "NetworkElement",
			"uml-id": "_oGqnr1LNEeO75dO39GbF8Q",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"The Network Element (NE) object class represents a network element (traditional NE) in the data plane. A data plane network element is essentially a consolidation of capabilities that can be viewed and controlled through a  single  management-control port. In the direct interface from an SDN controller to a network element in the data plane, the NetworkElement object defines the scope of control for the resources within the network element For example internal transfer of user information between the external terminations (ports of the NE), encapsulation, multiplexing/demultiplexing, and OAM functions, etc. The NetworkElement provides the scope of the naming space for identifying objects representing the resources within the data plane network element. NE is really a product bundling or some view of management scope, management access, session. The NE is not directly part of topology but brings meaning to the FD context and the LTP context (and hence the links)."
			]
		},
		"_fdRefList": {
			"id": "_fdRefList",
			"uml-id": "_oGqnslLNEeO75dO39GbF8Q",
			"uml-type": "ownedAttribute",
			"type": "_oGql-FLNEeO75dO39GbF8Q",
			"order-number": 1,
			"is-read-only": false,
			"description": [
				"Represents the FD that is completely within the boundary of the NE. At a low level of recursion, an FD (within a network element (NE)) represents a switch matrix (i.e., a fabric). Note that an NE can encompass multiple switch matrices (FDs) and the FD representing the switch matrix can be further partitioned. Where an FD is referenced by the NeEncompassesFd association, any FDs that it encompasses (i.e., that are associated with it by HigherLevelFdEncompassesLowerLevelFds), must also be encompassed by the NE and hence must have the NeEncompassesFd association."
			]
		},
		"FcPort": {
			"id": "FcPort",
			"uml-id": "_b_lUAFYgEeOVGaP4lO41SQ",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"The association of the FC to LTPs is made via FcPorts. The FcPort object class models the access to the FC function. The traffic forwarding between the associated FcPorts of the FC depends upon the type of FC and may be associated with FcSwitch object instances. In cases where there is resilience the FcPort may convey the resilience role of the access to the FC. It can represent a protected (resilient/reliable) point or a protecting (unreliable working or protection) point. The FcPort replaces the Protection Unit of a traditional protection model. The ForwadingConstruct can be considered as a component and the FcPort as a Port on that component"
			]
		},
		"role": {
			"id": "role",
			"uml-id": "_Ykm6QFeGEeOVGaP4lO41SQ",
			"uml-type": "ownedAttribute",
			"type": "_DUU_sGZ_EeWrX_JIGzXlSg",
			"order-number": 2,
			"is-read-only": false,
			"description": [
				"Each FcPort of the FC has a role (e.g., working, protection, protected, symmetric, hub, spoke, leaf, root) in the context of the FC with respect to the FC function."
			]
		},
		"fcPortDirection": {
			"id": "fcPortDirection",
			"uml-id": "_1HbEgEDAEeWQeOKbNUpP9A",
			"uml-type": "ownedAttribute",
			"type": "_2WpC8EC7EeWxhL2B6Peg6A",
			"order-number": 3,
			"is-read-only": false,
			"description": [
				"The orientation of defined flow at the FcPort."
			]
		},
		"LayerProtocol": {
			"id": "LayerProtocol",
			"uml-id": "_gROecFYXEeOVGaP4lO41SQ",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"Each transport layer is represented by a LayerProtocol (LP) instance. The LayerProtocol instances it can be used for controlling termination and monitoring functionality. It can also be used for controlling the adaptation (i.e. encapsulation and/or multiplexing of client signal), tandem connection monitoring, traffic conditioning and/or shaping functionality at an intermediate point along a connection. Where the client - server relationship is fixed 1:1 and immutable, the layers can be encapsulated in a single LTP instance. Where the is a n:1 relationship between client and server, the layers must be split over two separate instances of LTP."
			]
		},
		"configuredClientCapacity": {
			"id": "configuredClientCapacity",
			"uml-id": "_CUJD4BicEeSh8KVgZCMyDw",
			"uml-type": "ownedAttribute",
			"type": "pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String",
			"order-number": 2,
			"is-read-only": false,
			"description": [
				"Provides a summarized view of the client capacity that is configurable for use. Note the cleint LTP association should provide all necessary detail hence this attribute is questionable."
			]
		},
		"lpDirection": {
			"id": "lpDirection",
			"uml-id": "_GuuSYEDBEeWQeOKbNUpP9A",
			"uml-type": "ownedAttribute",
			"type": "_RWILYEDAEeWQeOKbNUpP9A",
			"order-number": 3,
			"is-read-only": false,
			"description": [
				"The overall directionality of the LP. - A BIDIRECTIONAL LP will have some SINK and/or SOURCE flowss. - A SINK LP can only contain elements with SINK flows or CONTRA_DIRECTION_SOURCE flows - A SOURCE LP can only contain SOURCE flows or CONTRA_DIRECTION_SINK flows"
			]
		},
		"terminationState": {
			"id": "terminationState",
			"uml-id": "_p2YfoGeEEeWmgIwAIZlYKQ",
			"uml-type": "ownedAttribute",
			"type": "pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean",
			"order-number": 4,
			"is-read-only": false,
			"description": [
				"Indicates whether the layer is terminated and if so how."
			]
		},
		"LogicalTerminationPoint": {
			"id": "LogicalTerminationPoint",
			"uml-id": "_eEpDMFX4EeOVGaP4lO41SQ",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"The LogicalTerminationPoint (LTP) object class encapsulates the termination and adaptation functions of one or more transport layers. The structure of LTP supports all transport protocols including circuit and packet forms."
			]
		},
		"_serverLtpRefList": {
			"id": "_serverLtpRefList",
			"uml-id": "_D4N9IFX5EeOVGaP4lO41SQ",
			"uml-type": "ownedAttribute",
			"type": "_eEpDMFX4EeOVGaP4lO41SQ",
			"order-number": 1,
			"is-read-only": false,
			"description": [
				"References contained LTPs representing servers of this LTP in an inverse multiplexing configuration (e.g. VCAT)."
			]
		},
		"_clientLtpRefList": {
			"id": "_clientLtpRefList",
			"uml-id": "_3Y4zAFYWEeOVGaP4lO41SQ",
			"uml-type": "ownedAttribute",
			"type": "_eEpDMFX4EeOVGaP4lO41SQ",
			"order-number": 2,
			"is-read-only": false,
			"description": [
				"References contained LTPs representing client traffic of this LTP for normal cases of multiplexing."
			]
		},
		"_lpList": {
			"id": "_lpList",
			"uml-id": "_lvFOQFYXEeOVGaP4lO41SQ",
			"uml-type": "ownedAttribute",
			"type": "_gROecFYXEeOVGaP4lO41SQ",
			"order-number": 3,
			"is-read-only": false,
			"description": [
				"Ordered list of LayerProtocols that this LTP is comprised of where the first entry in the list is the lowest server layer (e.g. physical)"
			]
		},
		"_connectedLtpRef": {
			"id": "_connectedLtpRef",
			"uml-id": "_CHM6YFYYEeOVGaP4lO41SQ",
			"uml-type": "ownedAttribute",
			"type": "_eEpDMFX4EeOVGaP4lO41SQ",
			"order-number": 4,
			"is-read-only": false,
			"description": [
				"Applicable in a simple context where two LTPs are associated via a non-adjustable enabled forwarding. Reduces clutter removing the need for two additional LTPs and an FC with a pair of FcPorts."
			]
		},
		"_peerLtpRef": {
			"id": "_peerLtpRef",
			"uml-id": "_TkuhMFYYEeOVGaP4lO41SQ",
			"uml-type": "ownedAttribute",
			"type": "_eEpDMFX4EeOVGaP4lO41SQ",
			"order-number": 5,
			"is-read-only": false,
			"description": [
				"References contained LTPs representing the reversal of orientation of flow where two LTPs are associated via a non-adjustable enabled forwarding and where the referenced LTP is fully dependent on the this LTP."
			]
		},
		"physicalPortReference": {
			"id": "physicalPortReference",
			"uml-id": "_RLDi4BieEeSh8KVgZCMyDw",
			"uml-type": "ownedAttribute",
			"type": "pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String",
			"order-number": 6,
			"is-read-only": false,
			"description": [
				"One or more text labels for the unmodelled physical port associated with the LTP. In many cases there is no associated physical port"
			]
		},
		"_ltpRefList": {
			"id": "_ltpRefList",
			"uml-id": "_vq1NIBigEeSh8KVgZCMyDw",
			"uml-type": "ownedAttribute",
			"type": "_eEpDMFX4EeOVGaP4lO41SQ",
			"order-number": 7,
			"is-read-only": false,
			"description": [
				"References one or more LTPs in other views that represent this LTP. The referencing LTP is the rovider of capability."
			]
		},
		"ltpDirection": {
			"id": "ltpDirection",
			"uml-id": "_S811EEDBEeWQeOKbNUpP9A",
			"uml-type": "ownedAttribute",
			"type": "_RWILYEDAEeWQeOKbNUpP9A",
			"order-number": 8,
			"is-read-only": false,
			"description": [
				"The overall directionality of the LTP. - A BIDIRECTIONAL LTP must have at least some LPs that are BIDIRECTIONAL but may also have some SINK and/or SOURCE LPs. - A SINK LTP can only contain SINK LPs - A SOURCE LTP can only contain SOURCE LPs"
			]
		},
		"FcSwitch": {
			"id": "FcSwitch",
			"uml-id": "_a97NQFYhEeOVGaP4lO41SQ",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"The FcSwitch object class models the switched forwarding of traffic (traffic flow) between FcPorts and is present where there is protection functionality in the FC. If an FC exposes protection (having two FcPorts that provide alternative identical inputs/outputs), the FC will have one or more associated FcSwitch objects to represent the alternative flow choices visible at the edge of the FC. The FC switch represents and defines a protection switch structure encapsulated in the FC. Essentially performs the functoion of the Protection Group in a traditional model. Associates to 2 or more FcPorts each playing the role of a Protection Unit. One or more protection FcPorts (standby/backup) provide protection for one or more working (i.e. regular/main/preferred) FcPorts where eith protection or working can feed one or more protected FcPort. May be used in revertive or non-revertive (symmetric) mode. When in revertive mode may define waitToRestore time. May be used in one of several modes including source switch, destination switched, source and destination switched etc (covering cases such as 1+1 ane 1:1).. May be lockout (prevented from switching), force switched or manual switched. Will indicate switch state and change of state."
			]
		},
		"holdOffTime": {
			"id": "holdOffTime",
			"uml-id": "_oGqn6FLNEeO75dO39GbF8Q",
			"uml-type": "ownedAttribute",
			"type": "pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer",
			"order-number": 1,
			"is-read-only": false,
			"description": [
				"This attribute indicates the time, in seconds, between declaration of unacceptable quality of signal on the currently selected FcPort, and the initialization of the protection switching algorithm."
			]
		},
		"waitToRestoreTime": {
			"id": "waitToRestoreTime",
			"uml-id": "_oGqn5lLNEeO75dO39GbF8Q",
			"uml-type": "ownedAttribute",
			"type": "pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer",
			"order-number": 2,
			"is-read-only": false,
			"description": [
				"If the protection system is revertive, this attribute specifies the amount of time, in seconds, to wait after the preferred FcPort returns to an acceptable state of operaion (e.g a fault has cleared) before restoring traffic to that preferred FcPort."
			]
		},
		"protType": {
			"id": "protType",
			"uml-id": "_oGqn6lLNEeO75dO39GbF8Q",
			"uml-type": "ownedAttribute",
			"type": "_c3Hu8Gb3EeWrX_JIGzXlSg",
			"order-number": 3,
			"is-read-only": false,
			"description": [
				"Indicates the protection scheme that is used for the ProtectionGroup."
			]
		},
		"operType": {
			"id": "operType",
			"uml-id": "_oGqn41LNEeO75dO39GbF8Q",
			"uml-type": "ownedAttribute",
			"type": "_oGqjf1LNEeO75dO39GbF8Q",
			"order-number": 4,
			"is-read-only": false,
			"description": [
				"This attribute whether or not the protection scheme is revertive or non-revertive."
			]
		},
		"_selectedFcPortRefList": {
			"id": "_selectedFcPortRefList",
			"uml-id": "_2PdiYI8lEeOw_ste-s6RrA",
			"uml-type": "ownedAttribute",
			"type": "_b_lUAFYgEeOVGaP4lO41SQ",
			"order-number": 5,
			"is-read-only": false,
			"description": [
				"Indicates which points are selected by the switch."
			]
		},
		"Name": {
			"id": "Name",
			"uml-id": "_BUcVEI2tEeO38ZmbECnvbg",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"Name: A property of an entity with a value that is unique in some namespace but may change during the life of the entity. A name carries no semantics with respect to the purpose of the entity."
			]
		},
		"nameList": {
			"id": "nameList",
			"uml-id": "_ajjMYI2uEeO38ZmbECnvbg",
			"uml-type": "ownedAttribute",
			"type": "_y7oy8I3tEeO38ZmbECnvbg",
			"order-number": 1,
			"is-read-only": false,
			"is-key": 1,
			"description": [
				"List of names."
			]
		},
		"GlobalClass": {
			"id": "GlobalClass",
			"uml-id": "_iVJ1kI2wEeO38ZmbECnvbg",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"Represents a type of thing (an Entity) that has instances which can exist in their own right (independently of any others). Entity: Has identity, defined boundary, properties, functionality and lifecycle in a global context. (consider in the context of an Object Class: (usage) The representation of a thing that may be an entity or an inseparable Entity Feature)"
			]
		},
		"LocalClass": {
			"id": "LocalClass",
			"uml-id": "_k5nWYI2wEeO38ZmbECnvbg",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"A LocalClass represents a Feature of an Entity. It is inseparable from a GlobalClass but is a distinct feature of that GlobalClass such that the instances of LocalClass are able to have associations to other instances.. Feature of an Entity: An inseparable, externally distinguishable part of an entity. The mandatory LocalId of the LocalClass instance is unique in the context of the GlobalClass from which it is inseparable. (consider in the context of an Object Class: (usage) The representation of a thing that may be an entity or an inseparable feature of an entity)"
			]
		},
		"localIdList": {
			"id": "localIdList",
			"uml-id": "_RMJegI22EeO38ZmbECnvbg",
			"uml-type": "ownedAttribute",
			"type": "_y7oy8I3tEeO38ZmbECnvbg",
			"order-number": 1,
			"is-read-only": false,
			"description": [
				"An identifier that is unique in the context of some scope that is less than the global scope. (consider in the context of Identifier: A property of an entity/role with a value that is unique within an identifier space, where the identifier space is itself unique, and immutable. The identifier therefore represents the identity of the entity/role. An identifier carries no semantics with respect to the purpose of the entity.)"
			]
		},
		"Label": {
			"id": "Label",
			"uml-id": "_u0HQoI2wEeO38ZmbECnvbg",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"A property of an entity with a value that is not expected to be unique and is allowed to change. A label carries no semantics with respect to the purpose of the entity and has no effect on the entity behavior or state."
			]
		},
		"labelList": {
			"id": "labelList",
			"uml-id": "_olrqYI2uEeO38ZmbECnvbg",
			"uml-type": "ownedAttribute",
			"type": "_y7oy8I3tEeO38ZmbECnvbg",
			"order-number": 1,
			"is-read-only": false,
			"description": [
				"List of labels."
			]
		},
		"Extension": {
			"id": "Extension",
			"uml-id": "_bCi74I22EeO38ZmbECnvbg",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"Extension provides an opportunity to define properties not declared in the class that extend the class enabling a realization with simple ad-hoc extension of standard classes to be conformant."
			]
		},
		"extensionList": {
			"id": "extensionList",
			"uml-id": "_uQqu4I28EeO38ZmbECnvbg",
			"uml-type": "ownedAttribute",
			"type": "_y7oy8I3tEeO38ZmbECnvbg",
			"order-number": 1,
			"is-read-only": false,
			"description": [
				"List of simple name-value extentions"
			]
		},
		"UniversalIdAuthority": {
			"id": "UniversalIdAuthority",
			"uml-id": "_StA-4I23EeO38ZmbECnvbg",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"Represents the authority that controls the allocation of UUIDs."
			]
		},
		"NameAndValueAuthority": {
			"id": "NameAndValueAuthority",
			"uml-id": "_ulDtsI3AEeO38ZmbECnvbg",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"Represents the authority that controls the legal valuse for the names and values of a name/value attribute."
			]
		},
		"uuid": {
			"id": "uuid",
			"uml-id": "_U1tnkI31EeO38ZmbECnvbg",
			"uml-type": "ownedAttribute",
			"type": "_SU3Q4I30EeO38ZmbECnvbg",
			"order-number": 0,
			"is-read-only": false,
			"description": [
				"The UUID for the NameValueAuthority."
			]
		},
		"ConditionalPackage": {
			"id": "ConditionalPackage",
			"uml-id": "_-ZWVQJP0EeOqfpp-ZJSmaA",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"The base class for conditional packages."
			]
		},
		"State_Pac": {
			"id": "State_Pac",
			"uml-id": "_RG6VILEtEeSZUdYfPSdgew",
			"uml-type": "uml:Class",
			"is-read-only": false,
			"description": [
				"Provides general state attributes."
			]
		},
		"operationalState": {
			"id": "operationalState",
			"uml-id": "_dO6owLEtEeSZUdYfPSdgew",
			"uml-type": "ownedAttribute",
			"type": "_lNclkLEtEeSZUdYfPSdgew",
			"order-number": 1,
			"is-read-only": true,
			"description": [
				"The operational state is used to indicate whether or not the resource is installed and working"
			]
		},
		"administrativeControl": {
			"id": "administrativeControl",
			"uml-id": "_7gqwALEtEeSZUdYfPSdgew",
			"uml-type": "ownedAttribute",
			"type": "_-xPeALEvEeSZUdYfPSdgew",
			"order-number": 2,
			"is-read-only": false,
			"description": [
				"The administrativeControl state provides control of the availability of specific resources without modification to the provisioning of those resources. The value is the current control target. The actual administrativeState may or may not be at target."
			]
		},
		"administrativeState": {
			"id": "administrativeState",
			"uml-id": "_AjGvILEuEeSZUdYfPSdgew",
			"uml-type": "ownedAttribute",
			"type": "_KSKOYLEuEeSZUdYfPSdgew",
			"order-number": 3,
			"is-read-only": true,
			"description": [
				"Shows whether or not the client has permission to use or has a prohibition against using the resource. The administrative state expresses usage permissions for specific resources without modification to the provisioning of those resources."
			]
		},
		"lifecycleState": {
			"id": "lifecycleState",
			"uml-id": "_PzqZ0GgiEeWmgIwAIZlYKQ",
			"uml-type": "ownedAttribute",
			"type": "_YSsboGgiEeWmgIwAIZlYKQ",
			"order-number": 4,
			"is-read-only": false,
			"description": [
				"Used to track the planned deployment, allocation to clients and withdrawal of resources."
			]
		},
		"LayerProtocolName": {
			"id": "LayerProtocolName",
			"uml-id": "_P-Hp8MD4EeSoNOrYOfaryg",
			"uml-type": "uml:DataType",
			"description": [
				"Provides a controlled list of layer protocol names and indicates the naming authority. Note that it is expected that attributes will be added to this structure to convey the naming authority name, the name of the layer protocol using a human readable string and any particular standard reference. Layer protocol names include: - Layer 1 (L1): OTU, ODU - Layer 2 (L2): Carrier Grade Ethernet (ETY, ETH), MPLS-TP (MT)"
			]
		},
		"PortRole": {
			"id": "PortRole",
			"uml-id": "_DUU_sGZ_EeWrX_JIGzXlSg",
			"uml-type": "uml:DataType",
			"description": [
				"The role of a port in the context of the function of the forwarding entity that it bounds"
			]
		},
		"ProtectionType": {
			"id": "ProtectionType",
			"uml-id": "_c3Hu8Gb3EeWrX_JIGzXlSg",
			"uml-type": "uml:DataType",
			"description": [
				"Identifies the type of rotection of an FcSwitch."
			]
		},
		"DateAndTime": {
			"id": "DateAndTime",
			"uml-id": "_oGqi1lLNEeO75dO39GbF8Q",
			"uml-type": "uml:DataType",
			"description": [
				"This primitive type defines the date and time according to the following structure:  yyyyMMddhhmmss.s[Z|{+|-}HHMm]  where: yyyy  0000 .. 9999  year MM  01 .. 12  month dd  01 .. 31  day hh  00 .. 23  hour mm  00 .. 59  minute ss  00 .. 59  second s  .0 .. .9  tenth of second (set to  .0  if EMS or NE cannot support this granularity) Z  Z  indicates UTC (rather than local time) {+|-}  +  or  -  delta from UTC HH  00 .. 23  time zone difference in hours Mm  00 .. 59  time zone difference in minutes."
			]
		},
		"NameAndValue": {
			"id": "NameAndValue",
			"uml-id": "_y7oy8I3tEeO38ZmbECnvbg",
			"uml-type": "uml:DataType",
			"description": [
				"A scoped name-value pair"
			]
		},
		"valueName": {
			"id": "valueName",
			"uml-id": "_77PyQI3tEeO38ZmbECnvbg",
			"uml-type": "ownedAttribute",
			"type": "pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String",
			"order-number": 1,
			"is-read-only": false,
			"is-key": 1,
			"description": [
				"The name of the value. The value need not have a name."
			]
		},
		"UniversalId": {
			"id": "UniversalId",
			"uml-id": "_SU3Q4I30EeO38ZmbECnvbg",
			"uml-type": "uml:DataType",
			"description": [
				"The univeral ID value where the mechanism for generation is defned by some authority not directly referenced in the structure."
			]
		},
		"value": {
			"id": "value",
			"uml-id": "_cbx2gI30EeO38ZmbECnvbg",
			"uml-type": "ownedAttribute",
			"type": "pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String",
			"order-number": 1,
			"is-read-only": false,
			"description": [
				"The specific value of the universal id"
			]
		},
		"_oGqjf1LNEeO75dO39GbF8Q": {
			"id": "OperType",
			"uml-id": "_oGqjf1LNEeO75dO39GbF8Q",
			"enum": [
				"REVERTIVE",
				"NON-REVERTIVE"
			],
			"is-read-only": false,
			"description": [
				"The operation type associated with the protection mechanism (either non-revertive or revertive)."
			]
		},
		"_2WpC8EC7EeWxhL2B6Peg6A": {
			"id": "PortDirection",
			"uml-id": "_2WpC8EC7EeWxhL2B6Peg6A",
			"enum": [
				"BIDIRECTIONAL",
				"INPUT",
				"OUTPUT",
				"UNIDENTIFIED_OR_UNKNOWN"
			],
			"is-read-only": false,
			"description": [
				"The orientation of flow at the Port of a Forwarding entity"
			]
		},
		"_dV67AEC8EeWxhL2B6Peg6A": {
			"id": "ForwardingDirection",
			"uml-id": "_dV67AEC8EeWxhL2B6Peg6A",
			"enum": [
				"BIDIRECTIONAL",
				"UNIDIRECTIONAL",
				"UNDEFINED_OR_UNKNOWN"
			],
			"is-read-only": false,
			"description": [
				"The directionality of a Forwarding entity."
			]
		},
		"_RWILYEDAEeWQeOKbNUpP9A": {
			"id": "TerminationDirection",
			"uml-id": "_RWILYEDAEeWQeOKbNUpP9A",
			"enum": [
				"BIDIRECTIONAL",
				"SINK",
				"SOURCE",
				"UNDEFINED_OR_UNKNOWN"
			],
			"is-read-only": false,
			"description": [
				"The directionality of a termination entity"
			]
		},
		"_T5GykEDNEeWQeOKbNUpP9A": {
			"id": "ExtendedTerminationDirection",
			"uml-id": "_T5GykEDNEeWQeOKbNUpP9A",
			"enum": [
				"CONTRA_DIRECTION_SINK",
				"CONTRA_DIRECTION_SOURCE"
			],
			"is-read-only": false,
			"description": [
				"Extended to include contra-direction considerations. Only applies to LP and elements of LP not to LTP??"
			]
		},
		"_6anG8GeEEeWmgIwAIZlYKQ": {
			"id": "TerminationState",
			"uml-id": "_6anG8GeEEeWmgIwAIZlYKQ",
			"enum": [
				"LP_CAN_NEVER_TERMINATE",
				"LT_NOT_TERMINATED",
				"TERMINATED_SERVER_TO_CLIENT_FLOW",
				"TERMINATED_CLIENT_TO_SERVER_FLOW",
				"TERMINATED_BIDIRECTIONAL",
				"LT_PERMENANTLY_TERMINATED",
				"TERMINATION_STATE_UNKNOWN"
			],
			"is-read-only": false,
			"description": [
				"Provides support for the range of behaviours and specific states that an LP can take with respect to termination of the signal. Indicates to what degree the LayerTermination is terminated."
			]
		},
		"_lNclkLEtEeSZUdYfPSdgew": {
			"id": "OperationalState",
			"uml-id": "_lNclkLEtEeSZUdYfPSdgew",
			"enum": [
				"DISABLED",
				"ENABLED"
			],
			"is-read-only": false,
			"description": [
				"The possible values of the operationalState."
			]
		},
		"_KSKOYLEuEeSZUdYfPSdgew": {
			"id": "AdministrativeState",
			"uml-id": "_KSKOYLEuEeSZUdYfPSdgew",
			"enum": [
				"LOCKED",
				"UNLOCKED"
			],
			"is-read-only": false,
			"description": [
				"The possible values of the administrativeState."
			]
		},
		"_-xPeALEvEeSZUdYfPSdgew": {
			"id": "AdministrativeControl",
			"uml-id": "_-xPeALEvEeSZUdYfPSdgew",
			"enum": [
				"UNLOCK",
				"LOCK_PASSIVE",
				"LOCK_ACTIVE",
				"LOCK_IMMEDIATE"
			],
			"is-read-only": false,
			"description": [
				"The possible values of the current target administrative state."
			]
		},
		"_McyhcGgeEeWmgIwAIZlYKQ": {
			"id": "ExtendedAdminState",
			"uml-id": "_McyhcGgeEeWmgIwAIZlYKQ",
			"enum": [
				"SHUTTING_DOWN_ACTIVE",
				"SHUTTING_DOWN_PASSIVE"
			],
			"is-read-only": false,
			"description": [
				"Possible extentions to AdministrativeState"
			]
		},
		"_YSsboGgiEeWmgIwAIZlYKQ": {
			"id": "LifecycleState",
			"uml-id": "_YSsboGgiEeWmgIwAIZlYKQ",
			"enum": [
				"PLANNED",
				"POTENTIAL",
				"INSTALLED",
				"PENDING_REMOVAL"
			],
			"is-read-only": false,
			"description": [
				"The possible values of the lifecycleState."
			]
		}
	}
}
