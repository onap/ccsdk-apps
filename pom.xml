<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.onap.ccsdk.parent</groupId>
        <artifactId>spring-boot-30-starter-parent</artifactId>
        <version>3.2.0-SNAPSHOT</version>
        <relativePath/>
    </parent>

    <groupId>org.onap.ccsdk.apps</groupId>
    <artifactId>ccsdk-apps</artifactId>
    <version>2.2.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>ccsdk-apps</name>
    <description>CCSDK applications</description>
    <url>https://wiki.onap.org</url>
    <organization>
        <name>ONAP</name>
    </organization>

    <modules>
        <module>cadi</module>
        <module>services</module>
        <module>ms</module>
    </modules>

    <scm>
        <connection>scm:git:ssh://git@${onap.git.host}/apps.git</connection>
        <developerConnection>scm:git:ssh://${onap.git.host}:${onap.git.port}/${onap.git.project}/apps.git</developerConnection>
        <url>${onap.git.protocol}://${onap.git.host}/projects/${onap.git.project}/repos/apps/browse</url>
    </scm>

    <properties>
        <!--Don't set any language to let sonar enable multi-language support-->
        <sonar.language/>
        <!--Provide src/main as source path so both src/main/java and src/main/kotlin are scanned-->
        <sonar.sources>src/main</sonar.sources>
        <!--Provide src/test as source path for test so both src/test/java and src/test/kotlin are scanned-->
        <sonar.tests>src/test</sonar.tests>
        <!--Only include java and kt files to the scan-->
        <sonar.inclusions>**/*.java,**/*.kt</sonar.inclusions>
        <!--Specify path to load jacoco XLM report, as Sonar can't load Kotlin coverage from binary report.
        Note: coverage for now is invalid and is failing to load because of:
        "Cannot import coverage information for file '{file}', coverage data is invalid."
        see https://github.com/jacoco/jacoco/issues/763
        That issue has been fixed in 0.8.3 , so we override the default ONAP
        version here to pick up that fix -->
        <sonar.coverage.jacoco.xmlReportPaths>${project.reporting.outputDirectory}/jacoco-ut/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <jacoco.version>0.8.8</jacoco.version>
        <gson.version>2.9.0</gson.version>
	    <springfox.version>3.0.0</springfox.version>
        <aaf.cadi.version>2.1.21</aaf.cadi.version>
        <maven.compiler.source>1.11</maven.compiler.source>
        <maven.compiler.target>1.11</maven.compiler.target>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>blackduck</id>
            <activation>
                <property>
                    <name>blackduck-scan</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.blackducksoftware.integration</groupId>
                        <artifactId>hub-maven-plugin</artifactId>
                        <version>1.4.0</version>
                        <inherited>false</inherited>
                        <configuration>
                            <hubProjectName>${project.name}</hubProjectName>
                            <outputDirectory>${project.basedir}</outputDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>create-bdio-file</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>createHubOutput</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dependency-list</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.ferstl</groupId>
                        <artifactId>depgraph-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>validate</phase>
                                <inherited>false</inherited>
                                <goals>
                                    <goal>aggregate</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-artifacts</id>
                                <phase>package</phase>
                                <inherited>false</inherited>
                                <goals>
                                    <goal>attach-artifact</goal>
                                </goals>
                                <configuration>
                                    <artifacts>
                                        <artifact>
                                            <file>${dependency-list.file}</file>
                                            <type>txt</type>
                                            <classifier>dependencies</classifier>
                                        </artifact>
                                    </artifacts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
