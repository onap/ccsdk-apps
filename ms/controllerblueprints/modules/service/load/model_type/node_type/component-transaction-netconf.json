{
  "description": "This is Netconf Transaction Configuration Component API",
  "version": "1.0.0",
  "capabilities": {
    "component-node": {
      "type": "tosca.capabilities.Node"
    }
  },
  "requirements": {
    "netconf-connection": {
      "capability": "netconf",
      "node": "vnf-netconf-device",
      "relationship": "tosca.relationships.ConnectsTo"
    }
  },
  "interfaces": {
    "org-openecomp-sdnc-netconf-adaptor-service-NetconfTransactionNode": {
      "operations": {
        "process": {
          "inputs": {
            "rollback": {
              "required": false,
              "type": "boolean"
            },
            "assignment-action-name": {
              "description": "Assignment Action Name to get from Database, Either (message & mask-info ) or ( resource-id & resource-type & action-name & template-name ) should be present. Message will be given higest priority",
              "required": true,
              "type": "string"
            },
            "transaction-components": {
              "description": "Components used to used for the atomic transaction, Default Handlers are org.openecomp.sdnc.netconf.adaptor.service.SimpleNetconfEditConfigNode and org.openecomp.sdnc.netconf.adaptor.service.SimpleNetconfGetConfigNode",
              "required": true,
              "type": "list",
              "entry_schema": {
                "type": "string"
              }
            },
            "resource-type": {
              "description": "Resource Type to get from Database, Either (message & mask-info ) or( resource-id & resource-type & action-name & template-name ) should be present. Message will be given higest priority",
              "required": false,
              "type": "string"
            },
            "initialise-sftp": {
              "required": false,
              "type": "boolean"
            },
            "request-id": {
              "description": "Request Id used to store the generated configuration, in the database along with the template-name",
              "required": true,
              "type": "string"
            },
            "initialise-ssh": {
              "required": false,
              "type": "boolean"
            },
            "lock": {
              "required": false,
              "type": "boolean",
              "default": false
            },
            "unlock": {
              "description": "If unLock command has to send before Edit Configuration.",
              "required": false,
              "type": "boolean",
              "default": false
            },
            "resource-id": {
              "description": "Resource Id to get from Database, Either (message & mask-info ) or ( resource-id & resource-type & action-name & template-name ) should be present. Message will be given higest priority",
              "required": false,
              "type": "string"
            },
            "action-name": {
              "description": "Action Name to get from Database, Either (message & mask-info ) or ( resource-id & resource-type & action-name & template-name ) should be present. Message will be given higest priority",
              "required": false,
              "type": "string"
            }
          },
          "outputs": {
            "rpc-response-message": {
              "type": "string"
            },
            "status": {
              "description": "Status of the Component Execution ( success or failure )",
              "required": true,
              "type": "string"
            }
          }
        }
      }
    }
  },
  "derived_from": "tosca.nodes.Component"
}